package ro.dcmt.data.controllers;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ro.dcmt.data.beans.Operatie;
import ro.dcmt.data.connection.DBConnection;

public class OperatieService {
	private static Logger logger = LoggerFactory.getLogger(OperatieService.class);
	private static Connection conn = (Connection) DBConnection.getConnection();
	private static PreparedStatement stmt = null;
	private static ResultSet rs = null;

	public ArrayList<Operatie> getOperatiiForCabinet(int idCabinet) {
		ArrayList<Operatie> operatii = new ArrayList<Operatie>();
		try {

			stmt = conn.prepareStatement("SELECT * FROM operatii WHERE IDCabinet = ?");
			stmt.setInt(1, idCabinet);

			rs = stmt.executeQuery();
			logger.info("Operation Information Fetch: " + idCabinet);
			while (rs.next()) {
			Operatie o = new Operatie();
				o.setId(rs.getInt(1));
				o.setTitlu(rs.getString(2));
				o.setDescriere(rs.getString(3));
				o.setIdCabinet(idCabinet);
				o.setPret(rs.getDouble(5));
				operatii.add(o);
			}

		} catch (SQLException ex) {
			// handle any errors
			System.out.println("SQLException: " + ex.getMessage());
			System.out.println("SQLState: " + ex.getSQLState());
			System.out.println("VendorError: " + ex.getErrorCode());
			logger.error(ex.getMessage());
		
	}
		return operatii;
	}
	
	
	public ArrayList<Operatie> getOperatiiForAppointment(String idOperatii) {
		ArrayList<Operatie> operatii = new ArrayList<Operatie>();
		String[] operatiiID = idOperatii.split(",");
		for(String id : operatiiID){
			if(id!=null && !id.equals(""))
		try {

			stmt = conn.prepareStatement("SELECT * FROM operatii WHERE ID = ?");
			stmt.setInt(1, Integer.parseInt(id));

			rs = stmt.executeQuery();
			logger.info("Operation Information Fetch: " + idCabinet);
			while (rs.next()) {
			Operatie o = new Operatie();
				o.setId(rs.getInt(1));
				o.setTitlu(rs.getString(2));
				o.setDescriere(rs.getString(3));
			
				o.setPret(rs.getDouble(5));
				operatii.add(o);
			}

		} catch (SQLException ex) {
			// handle any errors
			System.out.println("SQLException: " + ex.getMessage());
			System.out.println("SQLState: " + ex.getSQLState());
			System.out.println("VendorError: " + ex.getErrorCode());
			logger.error(ex.getMessage());
		
	}
		}
		return operatii;
	}

}
