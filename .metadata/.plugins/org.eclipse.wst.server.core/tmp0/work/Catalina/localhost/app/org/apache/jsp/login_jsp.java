/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M10
 * Generated at: 2016-10-19 12:49:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html lang=\"en\" class=\"body-full-height\">\n");
      out.write("<head>\n");
      out.write("<!-- META SECTION -->\n");
      out.write("<title>DCMT - Autentificare</title>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n");
      out.write("\n");
      out.write("<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\" />\n");
      out.write("<!-- END META SECTION -->\n");
      out.write("\n");
      out.write("<!-- CSS INCLUDE -->\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" id=\"theme\"\n");
      out.write("\thref=\"css/theme-default.css\" />\n");
      out.write("<!-- EOF CSS INCLUDE -->\n");
      out.write("\n");
      out.write("<!-- Cookie Verification -->\n");

String userName = null;
Cookie[] cookies = request.getCookies();
if(cookies !=null){
for(Cookie cookie : cookies){
    if(cookie.getName().equals("user")) userName = cookie.getValue();
}
}
if(userName != null) response.sendRedirect("home.jsp");


      out.write("\n");
      out.write("<!-- END OF Cookie Verification -->\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<button type=\"button\" id=\"failButton\" name=\"failButton\" style=\"display:none\" class=\"btn btn-danger mb-control\"\n");
      out.write("\t\tdata-box=\"#message-box-sound-2\">Fail</button>\n");
      out.write("\t<div class=\"login-container\">\n");
      out.write("\n");
      out.write("\t\t<div class=\"login-box animated fadeInDown\">\n");
      out.write("\t\t\t<div class=\"login-logo\"></div>\n");
      out.write("\t\t\t<div class=\"login-body\">\n");
      out.write("\t\t\t\t<div class=\"login-title\">\n");
      out.write("\t\t\t\t\t<strong>Bine ati venit</strong>, Introduceti datele\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<form action=\"WebAuthEndpoint\" method=\"post\" class=\"form-horizontal\">\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"Adresa de email\" name=\"email\" id=\"emailAddress\" />\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" placeholder=\"Parola\"\n");
      out.write("\t\t\t\t\t\t\t\tname=\"password\" id=\"password\" />\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn btn-link btn-block\">Ati uitat parola?</a>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-info btn-block\">Autentificare</button>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"login-footer\">\n");
      out.write("\t\t\t\t<div class=\"pull-left\">&copy; 2016 Dental Clinic Management\n");
      out.write("\t\t\t\t\tTool</div>\n");
      out.write("\t\t\t\t<div class=\"pull-right\">\n");
      out.write("\t\t\t\t\t<a href=\"#\">Despre</a> | <a href=\"#\">Confidentialitate</a> | <a\n");
      out.write("\t\t\t\t\t\thref=\"#\">Contact</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<!-- danger with sound -->\n");
      out.write("\t<div class=\"message-box message-box-danger animated fadeIn\"\n");
      out.write("\t\tdata-sound=\"fail\" id=\"message-box-sound-2\">\n");
      out.write("\t\t<div class=\"mb-container\">\n");
      out.write("\t\t\t<div class=\"mb-middle\">\n");
      out.write("\t\t\t\t<div class=\"mb-title\">\n");
      out.write("\t\t\t\t\t<span class=\"fa fa-times\"></span> Parola gresita!\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"mb-content\">\n");
      out.write("\t\t\t\t\t<p>Parola pe care a-ti introdus-o este gresita, va rugam incercati din nou!</p>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"mb-footer\">\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-default btn-lg pull-right mb-control-close\">Reincearca</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- end danger with sound -->\n");
      out.write("\t<!-- START PRELOADS -->\n");
      out.write("\t<audio id=\"audio-alert\" src=\"audio/alert.mp3\" preload=\"auto\"></audio>\n");
      out.write("\t<audio id=\"audio-fail\" src=\"audio/fail.mp3\" preload=\"auto\"></audio>\n");
      out.write("\t<!-- END PRELOADS -->\n");
      out.write("\n");
      out.write("\t<!-- START SCRIPTS -->\n");
      out.write("\t<!-- START PLUGINS -->\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/plugins/jquery/jquery-ui.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\"\n");
      out.write("\t\tsrc=\"js/plugins/bootstrap/bootstrap.min.js\"></script>\n");
      out.write("\t<!-- END PLUGINS -->\n");
      out.write("\n");
      out.write("\t<!-- THIS PAGE PLUGINS -->\n");
      out.write("\t<script type='text/javascript' src='js/plugins/icheck/icheck.min.js'></script>\n");
      out.write("\t<script type=\"text/javascript\"\n");
      out.write("\t\tsrc=\"js/plugins/mcustomscrollbar/jquery.mCustomScrollbar.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<script type='text/javascript' src='js/plugins/noty/jquery.noty.js'></script>\n");
      out.write("\t<script type='text/javascript'\n");
      out.write("\t\tsrc='js/plugins/noty/layouts/topCenter.js'></script>\n");
      out.write("\t<script type='text/javascript' src='js/plugins/noty/layouts/topLeft.js'></script>\n");
      out.write("\t<script type='text/javascript'\n");
      out.write("\t\tsrc='js/plugins/noty/layouts/topRight.js'></script>\n");
      out.write("\n");
      out.write("\t<script type='text/javascript' src='js/plugins/noty/themes/default.js'></script>\n");
      out.write("\n");
      out.write("\t<!-- END PAGE PLUGINS -->\n");
      out.write("\n");
      out.write("\t<!-- START TEMPLATE -->\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/plugins.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/actions.js\"></script>\n");
      out.write("\t<!-- END TEMPLATE -->\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("window.onload = function() {\n");
      out.write("\n");

String failed = null;
 cookies = request.getCookies();
if(cookies !=null){
for(Cookie cookie : cookies){
    if(cookie.getName().equals("failed")) failed = cookie.getValue();
}
}
if(failed != null){


      out.write("\n");
      out.write("document.getElementById(\"failButton\").click();\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("};\n");
      out.write("</script>\n");
      out.write("<!--Start of Tawk.to Script-->\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tvar Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();\n");
      out.write("\t\t(function() {\n");
      out.write("\t\t\tvar s1 = document.createElement(\"script\"), s0 = document\n");
      out.write("\t\t\t\t\t.getElementsByTagName(\"script\")[0];\n");
      out.write("\t\t\ts1.async = true;\n");
      out.write("\t\t\ts1.src = 'https://embed.tawk.to/58075974cfdf421cf96b5639/default';\n");
      out.write("\t\t\ts1.charset = 'UTF-8';\n");
      out.write("\t\t\ts1.setAttribute('crossorigin', '*');\n");
      out.write("\t\t\ts0.parentNode.insertBefore(s1, s0);\n");
      out.write("\t\t})();\n");
      out.write("\t</script>\n");
      out.write("\t<!--End of Tawk.to Script-->\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
